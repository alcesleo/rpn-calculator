{"version":3,"sources":["index.tsx"],"names":["DECIMAL","MINUS","DISPLAY_ROWS","EMPTY_BOTTOM_ROW","EMPTY_STACK","DISPLAY_PADDING","Array","fill","Calculator","props","digitHandler","digit","setBottomRow","row","handleDecimal","indexOf","handleDivision","handleArithmetic","lhs","rhs","handleMultiplication","handleSubtraction","handleAddition","func","stack","getStack","length","slice","result","Number","parseFloat","toString","setStack","handleSign","handleClear","handleDrop","handleDelete","handleEnter","handleUndo","state","historyPosition","setState","handleRedo","history","handleRoll","handleSwap","getDisplayRows","reverse","dropRedoStack","handleKeyDown","e","console","log","key","document","addEventListener","this","className","map","i","onClick","React","Component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.fecd5f15.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom'\nimport './index.css'\n\nconst DECIMAL = '.';\nconst MINUS = '-';\nconst DISPLAY_ROWS = 10;\nconst EMPTY_BOTTOM_ROW = '0';\nconst EMPTY_ROW = '\\u00A0'; // &nbsp;\nconst EMPTY_STACK = [EMPTY_BOTTOM_ROW];\nconst DISPLAY_PADDING = Array(DISPLAY_ROWS - 1).fill(EMPTY_ROW);\n\n\ntype Row = string;\ntype Stack = Array<Row>;\n\ninterface IMutateRow { (row: Row): Row; }\ninterface IMutateStack { (stack: Stack): Stack; }\ninterface IArithmetic { (lhs: number, rhs: number): number; }\n\ninterface IProps {}\n\ninterface IState {\n  history: Array<Stack>,\n  historyPosition: number,\n}\n\nclass Calculator extends React.Component<IProps, IState> {\n  constructor(props: IProps) {\n    super(props);\n    this.state = {\n      history: [EMPTY_STACK],\n      historyPosition: 0,\n    };\n  }\n\n  componentDidMount() {\n    document.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  render() {\n    return (\n      <div className=\"calculator\">\n        <div className=\"display\">{this.getDisplayRows().map((row, i) =>\n          <div key={i} className=\"display_row\">{row}</div>\n        )}\n        </div>\n\n        <div className=\"btn operator\" onClick={this.handleRoll}>Roll</div>\n        <div className=\"btn operator\" onClick={this.handleUndo}>Undo</div>\n        <div className=\"btn operator\" onClick={this.handleRedo}>Redo</div>\n        <div className=\"btn operator\" onClick={this.handleSign}>+/-</div>\n        <div className=\"btn operator\" onClick={this.handleDivision}>/</div>\n\n        <div className=\"btn operator\" onClick={this.handleSwap}>Swap</div>\n        <div className=\"btn\" onClick={this.digitHandler('7')}>7</div>\n        <div className=\"btn\" onClick={this.digitHandler('8')}>8</div>\n        <div className=\"btn\" onClick={this.digitHandler('9')}>9</div>\n        <div className=\"btn operator\" onClick={this.handleMultiplication}>*</div>\n\n        <div className=\"btn operator\" onClick={this.handleClear}>Clear</div>\n        <div className=\"btn\" onClick={this.digitHandler('4')}>4</div>\n        <div className=\"btn\" onClick={this.digitHandler('5')}>5</div>\n        <div className=\"btn\" onClick={this.digitHandler('6')}>6</div>\n        <div className=\"btn operator\" onClick={this.handleSubtraction}>-</div>\n\n        <div className=\"btn operator\" onClick={this.handleDrop}>Drop</div>\n        <div className=\"btn\" onClick={this.digitHandler('1')}>1</div>\n        <div className=\"btn\" onClick={this.digitHandler('2')}>2</div>\n        <div className=\"btn\" onClick={this.digitHandler('3')}>3</div>\n        <div className=\"btn operator\" onClick={this.handleAddition}>+</div>\n\n        <div className=\"btn operator\" onClick={this.handleDelete}>Del</div>\n        <div className=\"btn operator\" onClick={this.handleDecimal}>{DECIMAL}</div>\n        <div className=\"btn\" onClick={this.digitHandler('0')}>0</div>\n        <div className=\"btn operator enter\" onClick={this.handleEnter}>Enter</div>\n      </div>\n    )\n  }\n\n  digitHandler = (digit: string): () => void => {\n    return () => {\n      this.setBottomRow((row: string) => row !== EMPTY_BOTTOM_ROW ? `${row}${digit}` : digit);\n    }\n  }\n\n  handleDecimal = () => {\n    this.setBottomRow((row: string) => row.indexOf(DECIMAL) === -1 ? `${row}${DECIMAL}` : row);\n  }\n\n  handleDivision       = () => this.handleArithmetic((lhs: number, rhs: number) => lhs / rhs);\n  handleMultiplication = () => this.handleArithmetic((lhs: number, rhs: number) => lhs * rhs);\n  handleSubtraction    = () => this.handleArithmetic((lhs: number, rhs: number) => lhs - rhs);\n  handleAddition       = () => this.handleArithmetic((lhs: number, rhs: number) => lhs + rhs);\n\n  handleArithmetic = (func: IArithmetic) => {\n    const stack = this.getStack();\n\n    if (stack.length < 2) return;\n\n    const [rhs, lhs] = stack.slice(0, 2);\n    const result = func(Number.parseFloat(lhs), Number.parseFloat(rhs)).toString();\n\n    this.setStack(stack => [result, ...stack.slice(2)])\n  }\n\n  handleSign = () => {\n    this.setBottomRow(row => row.indexOf(MINUS) === -1 ? `${MINUS}${row}` : row.slice(1));\n  }\n\n  handleClear = () => {\n    if (this.getStack() === EMPTY_STACK) return;\n\n    this.setStack(() => EMPTY_STACK);\n  }\n\n  handleDrop = () => {\n    this.setStack(stack => stack.length === 1 ? EMPTY_STACK : stack.slice(1));\n  }\n\n  handleDelete = () => {\n    this.setBottomRow(row => row.length > 1 ? row.slice(0, -1) : EMPTY_BOTTOM_ROW);\n  }\n\n  handleEnter = () => {\n    this.setStack(stack => [EMPTY_BOTTOM_ROW, ...stack]);\n  }\n\n  handleUndo = () => {\n    if (this.state.historyPosition <= 0) return;\n\n    this.setState(state => ({\n      historyPosition: state.historyPosition - 1\n    }));\n  }\n\n  handleRedo = () => {\n    if (this.state.historyPosition >= this.state.history.length - 1) return;\n\n    this.setState(state => ({\n      historyPosition: state.historyPosition + 1,\n    }));\n  }\n\n  handleRoll = () => {\n    this.setStack(stack => [...stack.slice(1), stack[0]]);\n  }\n\n  handleSwap = () => {\n    if (this.getStack().length <= 1) return;\n\n    this.setStack(stack => [stack[1], stack[0], ...stack.slice(2)]);\n  }\n\n  getDisplayRows = () => [...this.getStack(), ...DISPLAY_PADDING].slice(0, DISPLAY_ROWS).reverse();\n\n  getStack = () => this.state.history[this.state.historyPosition];\n\n  setStack = (func: IMutateStack) => {\n    const stack = func(this.getStack());\n    const dropRedoStack = this.state.history.slice(0, this.state.historyPosition + 1)\n    const history = [...dropRedoStack, stack];\n\n    this.setState(state => ({\n      history: history,\n      historyPosition: state.historyPosition + 1,\n    }));\n  }\n\n  setBottomRow = (func: IMutateRow) => {\n    this.setStack(stack => [func(stack[0]), ...stack.slice(1)]);\n  }\n\n  handleKeyDown = (e: KeyboardEvent) => {\n    console.log(e);\n    switch (e.key) {\n      case '0':\n      case '1':\n      case '2':\n      case '3':\n      case '4':\n      case '5':\n      case '6':\n      case '7':\n      case '8':\n      case '9':\n        this.digitHandler(e.key)();\n        break;\n      case '.':\n        this.handleDecimal();\n        break;\n      case '+':\n        this.handleAddition();\n        break;\n      case '-':\n        this.handleSubtraction();\n        break;\n      case '*':\n        this.handleMultiplication();\n        break;\n      case '/':\n        this.handleDivision();\n        break;\n      case 'Enter':\n        this.handleEnter();\n        break;\n      case 'Backspace':\n        this.handleDelete();\n        break;\n      case 'r':\n        this.handleRoll();\n        break;\n      case 's':\n        this.handleSwap();\n        break;\n      case 'c':\n        this.handleClear();\n        break;\n      case 'd':\n        this.handleDrop();\n        break;\n      case 'm':\n        this.handleSign();\n        break;\n      case 'z':\n        this.handleUndo();\n        break;\n      case 'y':\n        this.handleRedo();\n        break;\n      default:\n        break;\n    }\n  }\n}\n\nReactDOM.render(\n  <Calculator />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}