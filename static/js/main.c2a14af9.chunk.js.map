{"version":3,"sources":["index.js"],"names":["DECIMAL","MINUS","DISPLAY_ROWS","EMPTY_BOTTOM_ROW","EMPTY_STACK","DISPLAY_PADDING","Array","fill","Calculator","props","digitHandler","digit","setBottomRow","display","handleDecimal","indexOf","handleDivision","handleArithmetic","lhs","rhs","handleMultiplication","handleSubtraction","handleAddition","func","stack","getStack","length","console","log","slice","result","Number","parseFloat","toString","setStack","handleSign","row","handleClear","handleDrop","handleDelete","handleEnter","handleUndo","historyPosition","setState","state","handleRedo","history","handleRoll","handleSwap","getDisplayRows","reverse","newStack","newHistory","map","item","index","className","this","i","key","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"2PAIMA,G,MAAU,KACVC,EAAQ,IACRC,EAAe,EACfC,EAAmB,IAEnBC,EAAc,CAACD,GACfE,EAAkBC,MAAMJ,EAAe,GAAGK,KAF9B,QAIZC,E,YACJ,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KA+CRC,aAAe,SAAAC,GACb,OAAO,WACL,EAAKC,cAAa,SAACC,GAAD,OAAaA,IAAYV,EAAZ,UAAkCU,GAAlC,OAA4CF,GAAUA,OAlDtE,EAsDnBG,cAAgB,WACd,EAAKF,cAAa,SAACC,GAAD,OAA2C,IAA9BA,EAAQE,QAAQf,GAAhB,UAAqCa,GAArC,OAA+Cb,GAAYa,MAvDzE,EA0DnBG,eAAuB,kBAAM,EAAKC,kBAAiB,SAACC,EAAKC,GAAN,OAAcD,EAAMC,MA1DpD,EA2DnBC,qBAAuB,kBAAM,EAAKH,kBAAiB,SAACC,EAAKC,GAAN,OAAcD,EAAMC,MA3DpD,EA4DnBE,kBAAuB,kBAAM,EAAKJ,kBAAiB,SAACC,EAAKC,GAAN,OAAcD,EAAMC,MA5DpD,EA6DnBG,eAAuB,kBAAM,EAAKL,kBAAiB,SAACC,EAAKC,GAAN,OAAcD,EAAMC,MA7DpD,EA+DnBF,iBAAmB,SAACM,GAClB,IAAMC,EAAQ,EAAKC,WACnB,GAAID,EAAME,OAAS,EACjBC,QAAQC,IAAI,uEADd,CAF2B,MAMRJ,EAAMK,MAAM,EAAG,GANP,mBAMpBV,EANoB,KAMfD,EANe,KAOrBY,EAASP,EAAKQ,OAAOC,WAAWd,GAAMa,OAAOC,WAAWb,IAAMc,WAEpE,EAAKC,UAAS,SAAAV,GAAK,OAAKM,GAAL,mBAAgBN,EAAMK,MAAM,UAxE9B,EA2EnBM,WAAa,WACX,EAAKvB,cAAa,SAAAwB,GAAG,OAA4B,IAAxBA,EAAIrB,QAAQd,GAAZ,UAA+BA,GAA/B,OAAuCmC,GAAQA,EAAIP,MAAM,OA5EjE,EA+EnBQ,YAAc,WACR,EAAKZ,aAAerB,GACxB,EAAK8B,UAAS,kBAAM9B,MAjFH,EAoFnBkC,WAAa,WACX,EAAKJ,UAAS,SAAAV,GAAK,OAAqB,IAAjBA,EAAME,OAAetB,EAAcoB,EAAMK,MAAM,OArFrD,EAwFnBU,aAAe,WACb,EAAK3B,cAAa,SAAAwB,GAAG,OAAIA,EAAIV,OAAS,EAAIU,EAAIP,MAAM,GAAI,GAAK1B,MAzF5C,EA4FnBqC,YAAc,WACZ,EAAKN,UAAS,SAAAV,GAAK,OAAKrB,GAAL,mBAA0BqB,QA7F5B,EAgGnBiB,WAAa,WACP,EAAKC,iBAAmB,GAE5B,EAAKC,UAAS,SAAAC,GAAK,MAAK,CACtBF,gBAAiBE,EAAMF,gBAAkB,OApG1B,EAwGnBG,WAAa,WACP,EAAKD,MAAMF,iBAAmB,EAAKE,MAAME,QAAQpB,OAAS,GAE9D,EAAKiB,UAAS,SAAAC,GAAK,MAAK,CACtBF,gBAAiBE,EAAMF,gBAAkB,OA5G1B,EAgHnBK,WAAa,WACX,EAAKb,UAAS,SAAAV,GAAK,4BAAQA,EAAMK,MAAM,IAApB,CAAwBL,EAAM,SAjHhC,EAoHnBwB,WAAa,WACP,EAAKvB,WAAWC,QAAU,GAC9B,EAAKQ,UAAS,SAAAV,GAAK,OAAKA,EAAM,GAAIA,EAAM,IAArB,mBAA4BA,EAAMK,MAAM,SAtH1C,EAyHnBoB,eAAiB,iBAAM,sBAAI,EAAKxB,YAAT,YAAwBpB,IAAiBwB,MAAM,EAAG3B,GAAcgD,WAzHpE,EA2HnBzB,SAAW,kBAAM,EAAKmB,MAAME,QAAQ,EAAKF,MAAMF,kBA3H5B,EA6HnBR,SAAW,SAAAX,GACT,IAAM4B,EAAW5B,EAAK,EAAKE,YACrB2B,EAAU,sBAAO,EAAKR,MAAME,QAAQjB,MAAM,EAAG,EAAKe,MAAMF,gBAAkB,IAAhE,CAAoES,IAEpF,EAAKR,UAAS,SAAAC,GAAK,MAAK,CACtBE,QAASM,EACTV,gBAAiBE,EAAMF,gBAAkB,OAnI1B,EAuInB9B,aAAe,SAAAW,GACb,EAAKW,UAAS,SAAAV,GAAK,OACjBA,EAAM6B,KAAI,SAACC,EAAMC,GAAP,OAA2B,IAAVA,EAAchC,EAAK+B,GAAQA,SAvIxD,EAAKV,MAAQ,CACXE,QAAS,CAAC1C,GACVsC,gBAAiB,GAJF,E,sEASjB,OACE,yBAAKc,UAAU,cACb,yBAAKA,UAAU,WAAWC,KAAKR,iBAAiBI,KAAI,SAACjB,EAAKsB,GAAN,OAClD,yBAAKC,IAAKD,EAAGF,UAAU,eAAepB,OAIxC,yBAAKoB,UAAU,eAAeI,QAASH,KAAKV,YAA5C,QACA,yBAAKS,UAAU,eAAeI,QAASH,KAAKhB,YAA5C,QACA,yBAAKe,UAAU,eAAeI,QAASH,KAAKZ,YAA5C,QACA,yBAAKW,UAAU,eAAeI,QAASH,KAAKtB,YAA5C,OACA,yBAAKqB,UAAU,eAAeI,QAASH,KAAKzC,gBAA5C,KAEA,yBAAKwC,UAAU,eAAeI,QAASH,KAAKT,YAA5C,QACA,yBAAKQ,UAAU,MAAMI,QAASH,KAAK/C,aAAa,MAAhD,KACA,yBAAK8C,UAAU,MAAMI,QAASH,KAAK/C,aAAa,MAAhD,KACA,yBAAK8C,UAAU,MAAMI,QAASH,KAAK/C,aAAa,MAAhD,KACA,yBAAK8C,UAAU,eAAeI,QAASH,KAAKrC,sBAA5C,KAEA,yBAAKoC,UAAU,eAAeI,QAASH,KAAKpB,aAA5C,SACA,yBAAKmB,UAAU,MAAMI,QAASH,KAAK/C,aAAa,MAAhD,KACA,yBAAK8C,UAAU,MAAMI,QAASH,KAAK/C,aAAa,MAAhD,KACA,yBAAK8C,UAAU,MAAMI,QAASH,KAAK/C,aAAa,MAAhD,KACA,yBAAK8C,UAAU,eAAeI,QAASH,KAAKpC,mBAA5C,KAEA,yBAAKmC,UAAU,eAAeI,QAASH,KAAKnB,YAA5C,QACA,yBAAKkB,UAAU,MAAMI,QAASH,KAAK/C,aAAa,MAAhD,KACA,yBAAK8C,UAAU,MAAMI,QAASH,KAAK/C,aAAa,MAAhD,KACA,yBAAK8C,UAAU,MAAMI,QAASH,KAAK/C,aAAa,MAAhD,KACA,yBAAK8C,UAAU,eAAeI,QAASH,KAAKnC,gBAA5C,KAEA,yBAAKkC,UAAU,eAAeI,QAASH,KAAKlB,cAA5C,OACA,yBAAKiB,UAAU,eAAeI,QAASH,KAAK3C,eAAgBd,GAC5D,yBAAKwD,UAAU,MAAMI,QAASH,KAAK/C,aAAa,MAAhD,KACA,yBAAK8C,UAAU,qBAAqBI,QAASH,KAAKjB,aAAlD,c,GA5CiBqB,IAAMC,WA+I/BC,IAASC,OACP,kBAACxD,EAAD,MACAyD,SAASC,eAAe,U","file":"static/js/main.c2a14af9.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\n\r\nconst DECIMAL = '.';\r\nconst MINUS = '-';\r\nconst DISPLAY_ROWS = 5;\r\nconst EMPTY_BOTTOM_ROW = '0';\r\nconst EMPTY_ROW = '\\u00A0'; // &nbsp;\r\nconst EMPTY_STACK = [EMPTY_BOTTOM_ROW];\r\nconst DISPLAY_PADDING = Array(DISPLAY_ROWS - 1).fill(EMPTY_ROW);\r\n\r\nclass Calculator extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      history: [EMPTY_STACK],\r\n      historyPosition: 0,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"calculator\">\r\n        <div className=\"display\">{this.getDisplayRows().map((row, i) =>\r\n          <div key={i} className=\"display_row\">{row}</div>\r\n        )}\r\n        </div>\r\n\r\n        <div className=\"btn operator\" onClick={this.handleRoll}>Roll</div>\r\n        <div className=\"btn operator\" onClick={this.handleUndo}>Undo</div>\r\n        <div className=\"btn operator\" onClick={this.handleRedo}>Redo</div>\r\n        <div className=\"btn operator\" onClick={this.handleSign}>+/-</div>\r\n        <div className=\"btn operator\" onClick={this.handleDivision}>/</div>\r\n\r\n        <div className=\"btn operator\" onClick={this.handleSwap}>Swap</div>\r\n        <div className=\"btn\" onClick={this.digitHandler('7')}>7</div>\r\n        <div className=\"btn\" onClick={this.digitHandler('8')}>8</div>\r\n        <div className=\"btn\" onClick={this.digitHandler('9')}>9</div>\r\n        <div className=\"btn operator\" onClick={this.handleMultiplication}>*</div>\r\n\r\n        <div className=\"btn operator\" onClick={this.handleClear}>Clear</div>\r\n        <div className=\"btn\" onClick={this.digitHandler('4')}>4</div>\r\n        <div className=\"btn\" onClick={this.digitHandler('5')}>5</div>\r\n        <div className=\"btn\" onClick={this.digitHandler('6')}>6</div>\r\n        <div className=\"btn operator\" onClick={this.handleSubtraction}>-</div>\r\n\r\n        <div className=\"btn operator\" onClick={this.handleDrop}>Drop</div>\r\n        <div className=\"btn\" onClick={this.digitHandler('1')}>1</div>\r\n        <div className=\"btn\" onClick={this.digitHandler('2')}>2</div>\r\n        <div className=\"btn\" onClick={this.digitHandler('3')}>3</div>\r\n        <div className=\"btn operator\" onClick={this.handleAddition}>+</div>\r\n\r\n        <div className=\"btn operator\" onClick={this.handleDelete}>Del</div>\r\n        <div className=\"btn operator\" onClick={this.handleDecimal}>{DECIMAL}</div>\r\n        <div className=\"btn\" onClick={this.digitHandler('0')}>0</div>\r\n        <div className=\"btn operator enter\" onClick={this.handleEnter}>Enter</div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  digitHandler = digit => {\r\n    return () => {\r\n      this.setBottomRow((display) => display !== EMPTY_BOTTOM_ROW ? `${display}${digit}` : digit);\r\n    }\r\n  }\r\n\r\n  handleDecimal = () => {\r\n    this.setBottomRow((display) => display.indexOf(DECIMAL) === -1 ? `${display}${DECIMAL}` : display);\r\n  }\r\n\r\n  handleDivision       = () => this.handleArithmetic((lhs, rhs) => lhs / rhs);\r\n  handleMultiplication = () => this.handleArithmetic((lhs, rhs) => lhs * rhs);\r\n  handleSubtraction    = () => this.handleArithmetic((lhs, rhs) => lhs - rhs);\r\n  handleAddition       = () => this.handleArithmetic((lhs, rhs) => lhs + rhs);\r\n\r\n  handleArithmetic = (func) => {\r\n    const stack = this.getStack()\r\n    if (stack.length < 2) {\r\n      console.log('You need at least 2 numbers on the stack to perform arithmetic.');\r\n      return;\r\n    }\r\n    const [rhs, lhs] = stack.slice(0, 2);\r\n    const result = func(Number.parseFloat(lhs), Number.parseFloat(rhs)).toString();\r\n\r\n    this.setStack(stack => [result, ...stack.slice(2)])\r\n  }\r\n\r\n  handleSign = () => {\r\n    this.setBottomRow(row => row.indexOf(MINUS) === -1 ? `${MINUS}${row}` : row.slice(1));\r\n  }\r\n\r\n  handleClear = () => {\r\n    if (this.getStack() === EMPTY_STACK) return;\r\n    this.setStack(() => EMPTY_STACK);\r\n  }\r\n\r\n  handleDrop = () => {\r\n    this.setStack(stack => stack.length === 1 ? EMPTY_STACK : stack.slice(1));\r\n  }\r\n\r\n  handleDelete = () => {\r\n    this.setBottomRow(row => row.length > 1 ? row.slice(0, -1) : EMPTY_BOTTOM_ROW);\r\n  }\r\n\r\n  handleEnter = () => {\r\n    this.setStack(stack => [EMPTY_BOTTOM_ROW, ...stack]);\r\n  }\r\n\r\n  handleUndo = () => {\r\n    if (this.historyPosition <= 0) return;\r\n\r\n    this.setState(state => ({\r\n      historyPosition: state.historyPosition - 1\r\n    }));\r\n  }\r\n\r\n  handleRedo = () => {\r\n    if (this.state.historyPosition >= this.state.history.length - 1) return;\r\n\r\n    this.setState(state => ({\r\n      historyPosition: state.historyPosition + 1,\r\n    }));\r\n  }\r\n\r\n  handleRoll = () => {\r\n    this.setStack(stack => [...stack.slice(1), stack[0]]);\r\n  }\r\n\r\n  handleSwap = () => {\r\n    if (this.getStack().length <= 1) return;\r\n    this.setStack(stack => [stack[1], stack[0], ...stack.slice(2)]);\r\n  }\r\n\r\n  getDisplayRows = () => [...this.getStack(), ...DISPLAY_PADDING].slice(0, DISPLAY_ROWS).reverse();\r\n\r\n  getStack = () => this.state.history[this.state.historyPosition];\r\n\r\n  setStack = func => {\r\n    const newStack = func(this.getStack());\r\n    const newHistory = [...this.state.history.slice(0, this.state.historyPosition + 1), newStack];\r\n\r\n    this.setState(state => ({\r\n      history: newHistory,\r\n      historyPosition: state.historyPosition + 1,\r\n    }));\r\n  }\r\n\r\n  setBottomRow = func => {\r\n    this.setStack(stack =>\r\n      stack.map((item, index) => index === 0 ? func(item) : item)\r\n    );\r\n  }\r\n}\r\n\r\nReactDOM.render(\r\n  <Calculator />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}